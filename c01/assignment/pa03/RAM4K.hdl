// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    /*
     * Based on the left-most three bits we can know for what RAM512 chip the address refers to:
     *   000 -> Refers to 1st RAM512
     *   001 -> Refers to 2nd RAM512
     *   010 -> Refers to 3rd RAM512
     *   011 -> Refers to 4th RAM512
     *   100 -> Refers to 5th RAM512
     *   101 -> Refers to 6th RAM512
     *   110 -> Refers to 7th RAM512
     *   111 -> Refers to 8th RAM512.
     *
     * Because that we will use the left-most three bits to select to what RAM512 chip to define which 
     * RAM512 chip should receive the load bit and/or read the actual state.
     * 
     */	   

    DMux8Way(in=load, sel=address[9..11], a=load01, b=load02, c=load03, d=load04, e=load05, f=load06, g=load07, h=load08);

    /*
     * Get the output of all chips an pass the correct load bit for each one.
     */

    RAM512(in=in, load=load01, address=address[0..8], out=ram01out);
    RAM512(in=in, load=load02, address=address[0..8], out=ram02out);
    RAM512(in=in, load=load03, address=address[0..8], out=ram03out);
    RAM512(in=in, load=load04, address=address[0..8], out=ram04out);
    RAM512(in=in, load=load05, address=address[0..8], out=ram05out);
    RAM512(in=in, load=load06, address=address[0..8], out=ram06out);
    RAM512(in=in, load=load07, address=address[0..8], out=ram07out);
    RAM512(in=in, load=load08, address=address[0..8], out=ram08out);

    /*
     * Again using address[0..8] to get the output of the right RAM512 chip.
     */
    Mux8Way16(a=ram01out, b=ram02out, c=ram03out, d=ram04out, e=ram05out, f=ram06out, g=ram07out, h=ram08out, sel=address[9..11], out=out);
}
